<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Registration Form (Live Output Demo)</title>
  <style>
    :root { --radius: 12px; }
    * { box-sizing: border-box; }
    body {
      font-family: Arial, sans-serif;
      background: #f2f2f2;
      margin: 0;
      padding: 40px 16px;
      display: grid;
      place-items: start center;
      min-height: 100vh;
      color: #222;
    }
    .wrap {
      display: grid;
      gap: 18px;
      width: min(900px, 100%);
    }
    .container, .output {
      background: #fff;
      padding: 24px;
      border-radius: var(--radius);
      box-shadow: 0 6px 18px rgba(0,0,0,0.08);
    }
    h2 { margin: 0 0 12px; font-size: 24px; }
    p.hint { margin: 0 0 8px; color: #555; }

    form label {
      display: block;
      margin: 12px 0 6px;
      font-weight: 600;
    }
    form input {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #ccc;
      border-radius: 10px;
      outline: none;
    }
    form input:focus { border-color: #007bff; }

    .row { display: grid; gap: 12px; grid-template-columns: 1fr; }
    @media (min-width: 700px){ .row { grid-template-columns: 1fr 1fr; } }

    button[type="submit"] {
      margin-top: 14px;
      width: 100%;
      padding: 12px;
      border: none;
      background: #007bff;
      color: #fff;
      font-size: 16px;
      border-radius: 10px;
      cursor: pointer;
    }
    button[type="submit"]:hover { background: #0056b3; }

    .error { color: #b00020; margin-top: 8px; font-size: 14px; }
    .success { color: #0a7a2f; margin-top: 8px; font-size: 14px; }

    .output pre {
      background: #0f172a;
      color: #e2e8f0;
      padding: 14px;
      border-radius: 10px;
      overflow: auto;
      margin: 0;
    }
    .muted { color: #666; font-size: 14px; }
  </style>
</head>
<body>
  <div class="wrap">
    <div class="container">
      <h2>Registration Form</h2>
      <p class="hint">Fill this out and click Register to see the captured output below (no page reload).</p>

      <form id="regForm" novalidate>
        <label for="name">Full Name</label>
        <input type="text" id="name" name="name" placeholder="John Doe" required>

        <div class="row">
          <div>
            <label for="email">Email</label>
            <input type="email" id="email" name="email" placeholder="john@example.com" required>
          </div>
          <div>
            <label for="phone">Phone Number</label>
            <input type="tel" id="phone" name="phone" placeholder="98765 43210" required>
          </div>
        </div>

        <div class="row">
          <div>
            <label for="password">Password</label>
            <input type="password" id="password" name="password" minlength="6" required>
          </div>
          <div>
            <label for="confirm">Confirm Password</label>
            <input type="password" id="confirm" name="confirm" minlength="6" required>
          </div>
        </div>

        <button type="submit">Register</button>
        <div id="msg" class="muted">Password must match and be at least 6 characters.</div>
      </form>
    </div>

    <div class="output">
      <h2>Submitted Output</h2>
      <p class="muted">After you submit, your form data (except the raw password) will appear here as JSON.</p>
      <pre id="result">{ /* nothing submitted yet */ }</pre>
    </div>
  </div>

  <script>
    const form = document.getElementById('regForm');
    const result = document.getElementById('result');
    const msg = document.getElementById('msg');

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      msg.className = 'muted';
      msg.textContent = 'Validating…';

      const data = Object.fromEntries(new FormData(form).entries());

      // Simple validations
      if (!data.name || !data.email || !data.phone || !data.password || !data.confirm) {
        msg.className = 'error';
        msg.textContent = 'Please fill out all fields.';
        return;
      }
      if (data.password.length < 6) {
        msg.className = 'error';
        msg.textContent = 'Password must be at least 6 characters.';
        return;
      }
      if (data.password !== data.confirm) {
        msg.className = 'error';
        msg.textContent = 'Passwords do not match.';
        return;
      }

      // Build a safe object to show (omit raw password)
      const safe = {
        name: data.name,
        email: data.email,
        phone: data.phone,
        password: '•••••••',
      };

      result.textContent = JSON.stringify(safe, null, 2);
      msg.className = 'success';
      msg.textContent = 'Submitted successfully (demo)!';

      // Optional: reset the form
      // form.reset();
    });
  </script>
</body>
</html>
